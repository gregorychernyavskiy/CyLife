CREATE DATABASE CyLife;
USE CyLife;


-- USER Table
CREATE TABLE User (
    USERID INT PRIMARY KEY AUTO_INCREMENT,
    NAME VARCHAR(100) NOT NULL,
    EMAIL VARCHAR(100) NOT NULL UNIQUE,
    PASSWORD VARCHAR(255) NOT NULL,
    TYPE ENUM('student', 'staff', 'club', 'org') NOT NULL
);

-- ORGANISATION Table (without foreign keys to Staff initially)
CREATE TABLE Organisation (
    ORGID INT PRIMARY KEY AUTO_INCREMENT,
    NAME VARCHAR(100) NOT NULL,
    EMAIL VARCHAR(100) NOT NULL UNIQUE,
    QUALIFICATION ENUM('Multicultural', 'International') NOT NULL
    -- DIRECTOR and STUDENT_ADVISOR will be added later
);

-- STAFF Table
CREATE TABLE Staff (
    STAFFID INT PRIMARY KEY AUTO_INCREMENT,
    NAME VARCHAR(100) NOT NULL,
    EMAIL VARCHAR(100) NOT NULL UNIQUE,
    ORGANIZATIONID INT,
    POSITION ENUM('Director', 'Student Advisor', 'Assistant Director', 'Student Assistant') NOT NULL,
    USERID INT NOT NULL,
    FOREIGN KEY (USERID) REFERENCES User(USERID),
    FOREIGN KEY (ORGANIZATIONID) REFERENCES Organisation(ORGID)
);

-- STUDENT Table
CREATE TABLE Student (
    STUDENTID INT PRIMARY KEY AUTO_INCREMENT,
    NAME VARCHAR(100) NOT NULL,
    EMAIL VARCHAR(100) NOT NULL UNIQUE,
    INTERNATIONAL BOOLEAN,
    MULTICULTURAL BOOLEAN,
    USERID INT NOT NULL,
    FOREIGN KEY (USERID) REFERENCES User(USERID)
);

-- CLUB Table
CREATE TABLE Club (
    CLUBID INT PRIMARY KEY AUTO_INCREMENT,
    NAME VARCHAR(100) NOT NULL,
    EMAIL VARCHAR(100) NOT NULL UNIQUE,
    PRESIDENT INT NOT NULL,
    FINANCE_OFFICER INT NOT NULL,
    PRO INT NOT NULL,
    FOREIGN KEY (PRESIDENT) REFERENCES Student(STUDENTID),
    FOREIGN KEY (FINANCE_OFFICER) REFERENCES Student(STUDENTID),
    FOREIGN KEY (PRO) REFERENCES Student(STUDENTID)
);

-- CLUB_MEMBERS Table
CREATE TABLE Club_Members (
    CLUBID INT,
    USERID INT,
    PRIMARY KEY (CLUBID, USERID),
    FOREIGN KEY (CLUBID) REFERENCES Club(CLUBID),
    FOREIGN KEY (USERID) REFERENCES User(USERID)
);

-- ORGANISATION_MEMBERS Table
CREATE TABLE Organisation_Members (
    ORGID INT,
    USERID INT,
    PRIMARY KEY (ORGID, USERID),
    FOREIGN KEY (ORGID) REFERENCES Organisation(ORGID),
    FOREIGN KEY (USERID) REFERENCES User(USERID)
);



